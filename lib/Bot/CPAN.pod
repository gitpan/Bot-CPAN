=pod

=head1 NAME

Bot::CPAN - provides CPAN services via IRC

=head1 SYNOPSIS

  use Bot::CPAN;

  my $bot = Bot::CPAN->new(
      channels => ['#cpan'],
      server => 'grou.ch',
      port => 6667,
      nick => 'cpantest',
      alt_nicks => ['cpantest2', 'cpantest3'],
      username => 'cpantest',
      name => 'cpantest',
      ignore_list => [qw(purl)],
      news_server => 'nntp.perl.org',
      group => 'perl.cpan.testers',
      reload_indices_interval => 300,
      inform_channel_of_new_uploads => 60,
  );
  $bot->run();

=head1 DESCRIPTION

This is a developer release of Bot::CPAN. You should not expect that the API
will remain stable, as this is currently a work in progress.

Bot::CPAN is a POE based distribution that allows individuals on IRC to query
the CPAN in a great number of different ways. Bot::CPAN will also automatically
inform the channel of new uploads to the CPAN.

=head1 METHODS

=over 4

=item * B<new>

This constructor returns a Bot::CPAN object, and is inherited from
Bot::BasicBot. It will accept named parameters for: channels, server, port,
nick, alt_nicks, username, name, ignore_list, store, and log. Bot::CPAN extends
the Bot::BasicBot constructor to accept the following named parameters:
news_server, group, reload_indices_interval, and inform_channel_of_new_uploads.

=item * B<run>

Fires up the bot.

=head1 COMMANDS

=over 4

=item * B<author>

=item * B<botsnack>

=item * B<description>

=item * B<details>

=item * B<distributions>

=item * B<help>

=item * B<language>

=item * B<modules>

=item * B<package>

=item * B<path>

=item * B<recent>

=item * B<stage>

=item * B<status>

=item * B<style>

=item * B<support>

=item * B<tests>

=item * B<url>

=item * B<version>

=head1 ATTRIBUTES

=item * B<:Private>

Indicates that this command can be executed via a /msg. This attribute takes an
argument of either 'notice', or 'privmsg', indicating that manner in which the
data should be returned to the user.

=item * B<:Public>

Indicates that this command can be executed publically from within a channel.
This attribute takes an argument of either 'notice', or 'privmsg', indicating
that manner in which the data should be returned to the user.

=item * B<:Fork>

Indicates that this command should be forked off. This should be used only for
commands that take a long time to execute (like 'tests'). Essentially, forking
off a long running command will prevent the execution from blocking the bot.

=item * B<:LowPrio>

Indicates that this command's data should be returned to the user with a low
priority. This should be used only for commands that return a lot of discrete
chunks of data back to the user (like 'tests'). This will prevent the returning
of a lot of data from blocking the bot.

=item * B<:Help>

Defines the help message for this command, which will be available via:
/msg bot help <command>.

=item * B<:Args>

Indicates the nature of the arguments sent to this command. This attribute
takes an argument of either 'required', 'optional', or 'refuse'. The user will
then get an error message if they attempt to use a command in a manner
inconsistent with its intended use.

=head1 CAVEATS

At the moment you'll need to patch BasicBot.pm if you expect Bot::CPAN to
operate normally. The patch corrects a few minor errors in BasicBot.pm.

Additionally, you'll also need to patch POE::Component::IRC in order to get the
prioritized messaging (which is required to prevent blocking during sending
back lots of data to users).

The patches have been sent to the upstream authors. The patches can be found in
etc/.

=head1 BUGS

If you happen to find one please email me at afoxson@pobox.com. Thank you.

=head1 TODO

  - Write actual tests.
  - Add support for 'fetch', 'readme', and 'whois'.

=head1 COPYRIGHT

  Copyright (c) 2003 Adam J. Foxson. All rights reserved.
  Copyright (c) 2003 Casey West. All rights reserved.

=head1 LICENSE

This program is free software; you may redistribute it and/or modify it under
the same terms as Perl itself.

=head1 SEE ALSO

=over 4

=item * L<perl>

=item * L<CPANPLUS>

=item * L<POE>

=item * L<POE::Component::IRC>

=item * L<Bot::BasicBot>

=item * L<Net::NNTP>

=item * L<Mail::Internet>

=item * L<Attribute::Handlers>

=back

=head1 AUTHOR

Adam J. Foxson E<lt>F<afoxson@pobox.com>E<gt>, with patches from Casey West
E<lt>F<cwest@cpan.org>E<gt> to support the latest POE versions, Randal Schwartz
E<lt>F<merlyn@stonehenge.com>E<gt> to support NNTP retrieval of CPAN uploads
(as opposed to the old way of doing it via mailbox polling), and Rocco Caputo
E<lt>F<troc+cpan@pobox.com>E<gt> that solved early-on blocking issues.

Many thanks to gilc@#perl@magnet for spending time on #cpan@magnet beta
testing.

=cut
